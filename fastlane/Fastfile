# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

desc "Run package tests with coverage"
lane :code_coverage do

  FileUtils.remove_dir "../xcov_output", true

  test

  xcov(
    scheme: ENV['EudiRQESUI'],
    output_directory: "xcov_output",
    is_swift_package: true
  )

  if ENV['CI'] != 'true'
    sh 'open ../xcov_output/index.html'
  end

end

desc "Run package tests"
lane :test do

  params = {
    package_path: '.',
    scheme: ENV['EudiRQESUI'],
    devices: ['iPhone 16 Pro Max'], 
    result_bundle: true
  }

  if ENV['CI'] 
    params[:xcargs] = "-skipPackagePluginValidation -skipMacroValidation"
  end

  run_tests(params)

end

desc "Deploy tags"
lane :deploy do |values|
  tag = values[:tag]

  unless tag
    UI.user_error!('Tag version is missing')
  end

  puts "Tag to be uploaded: #{tag}"

  add_git_tag(
    tag: tag,
  )

  if ENV['PROD_REMOTE_REPO']
    upload_tag(
      remoteUrl: ENV['PROD_REMOTE_REPO'],
      tag: tag,
    )
  end

  if ENV['DEV_REMOTE_REPO']
    upload_tag(
      remoteUrl: ENV['DEV_REMOTE_REPO'],
      tag: tag,
    )
  end

  if ENV['GITHUB_RELEASE_REPO'] && ENV['GITHUB_RELEASE_TOKEN']
    github_release(
      token: ENV['GITHUB_RELEASE_TOKEN'],
      repo: ENV['GITHUB_RELEASE_REPO'],
      tag: tag,
      version: tag
    )
  end

end

desc "Upload tags"
lane :upload_tag do |values|
  remoteUrl = values[:remoteUrl]
  tag = values[:tag]
  sh("git remote set-url origin #{remoteUrl}")
  push_git_tags(tag: tag)
end

desc "Release to github"
lane :github_release do |values|
  token = values[:token]
  repo = values[:repo]
  tag = values[:tag]
  version = values[:version]
  github_release = set_github_release(
    repository_name: repo,
    api_token: token,
    name: version,
    tag_name: tag,
    is_generate_release_notes: true
  )
end

end
